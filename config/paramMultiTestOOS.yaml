# Possible choices for the plot type parameter are:
# 'metrics' 
# 'value'
# 'policy' 
# 'holding' 
# 'diagnostics'
# In this one one could reproduce similar figures to the paper and the supplementary material,
# as long as the folder path in the list "outputModel" contains relevant experiment to plot
# MULTI TEST OOS PARAMS
############################### LAUNCH SIMULATIONS ##############################
n_seeds : 250 # Number of OOS test to perform for each agent at each checkpoint
cores: 3
random_state : 9071 #[593, 373, 788, 833, 745]  #324 #9071 #9071 seed for two pos # 556785 seed for two neg # 33  # Seed for experiment reproducibility OOS. Used to draw "n_seeds" for OOS testing
use_GPU : False
varying_type : 'chunk'
varying_pars: ['outputModel'] 
#########################################################################################################
# COLORS
color_res : 'tab:blue'
color_mfree : 'tab:green'
color_gp : 'tab:orange'
#########################################################################################################
# FOLDER PARAMETERS
algo :  ['PPO']
plot_type: 'tpolicy' 
fullpath : False
generate_plot : False
optimal : True
policy_func : 'alpha' #alpha or time
holding:  0 #-5e+6 #null #5000.0 # null #0.3e+5
time_to_stop : 100 #0
alpha: 0.003 #0.003
outputDir: 'outputs'
outputClass: 'PPO'
seed : '959' #'24' #'959' # ['893','602'] #['178','317'] #'32764' 
var_plots : [
    # "NetPnl_OOS_{}_{}.parquet.gzip",
    # "Reward_OOS_{}_{}.parquet.gzip",
    # "SR_OOS_{}_{}.parquet.gzip",
    # "PnLstd_OOS_{}_{}.parquet.gzip",
    # "Pdist_OOS_{}_GP.parquet.gzip",
    # "AbsNetPnl_OOS_{}_{}.parquet.gzip",
    'AbsRew_OOS_{}_{}.parquet.gzip',
    # 'AbsRew_IS_{}_{}.parquet.gzip',
    # 'AbsWealth_OOS_{}_{}.parquet.gzip',
    # "AbsHold_OOS_{}_{}.parquet.gzip",
    # 'AbsSR_OOS_{}_{}.parquet.gzip',
    ]
    
var_plot_diagnostics : ['entropy_hist.npy', 'std_hist.npy']

n_dqn: null #'300000'
experiment_dqn: 'n_train_{}_halflife_{}_sigmaf_{}_mv_res_{}_inp_type_{}_seed_{}' 
hyperparams_model_dqn: null #['500000','66_630', '0.2_0.1'] #['500000','66_630', '0.1_0.1'] #['250000','126', '0.1'] #
hyperparams_exp_dqn: null #['250000','2.5', '0.2', 'False', 'f'] # for policy and value type of plot
outputModel_dqn: '20210503_GPGAUSS_1f_n_train_{}_halflife_{}_sigmaf_{}_mv_res_{}_inp_type_{}'
outputModels_dqn: ['20211101_DQNGARCH_pickseeds']

N_test: 1200 #1500 #200 # Length of OOS test
stochastic: False
window: 1 #150 #250 # 25
load_rewards: False
mv_solution: True
load_holdings: False
modeltag: '20211118_fixconv_residual_multi100'
dist_to_plot: 'r' # r or w for reward or wealth
ep_ppo: 3000 #1000 #1000 #800 #10 #2200 #2000 #4400 #5800 #6400 #1800 #3000 #3200 #4400 #4200 #7000 #[4000,2000] 
experiment_ppo: ['lr_0.0009_batch_size_500_seed_24'] #['len_series_1200_halflife_240_seed_959'] #,'halflife_40_kappa_1e-05_seed_315'] #'mv_res_True_lr_0.0005_seed_893' #['mv_res_True_double_noise_{}_sigmaf_{}_lr_0.0005_seed_178','seed_317'] #'['mv_res_True_double_noise_{}_sigmaf_{}_lr_0.0005_seed_178','seed_317'] #,'mv_res_False_double_noise_{}_sigmaf_{}_lr_0.00025_seed_687'] #'mv_res_True_lr_0.0005_seed_178' #'mv_res_False_lr_0.0001_seed_687'] #'mv_res_False_lr_0.0001_seed_{}' #mv_res_True_lr_0.0005_seed_{}'
hyperparams_model_ppo: [0.0009] #['32_32'] #[0.99,0.98,'64_64','128_64'] #[False,None]  #[True,1e-05] #[True,1e-05] #[False,None] 
hyperparams_exp_ppo: [40]  #[True,1e-05]
outputModel_ppo:  '20220208_convergence_mfree_lr_0.0009_batch_size_500' #'20220112_convergence_res_len_series_1200_halflife_240'
outputModels_ppo: ['20220208_convergence_mfree_lr_0.0009_batch_size_500'] #,'20220112_convergence_res_len_series_1200_halflife_240']
                    



# ['20220208_convergence_mfree_lr_{}_batch_size_100', 
#   '20220208_convergence_mfree_lr_{}_batch_size_25', 
#   '20220208_convergence_mfree_lr_{}_batch_size_250', 
#   '20220208_convergence_mfree_lr_{}_batch_size_50', 
#   '20220208_convergence_mfree_lr_{}_batch_size_500', ]


# ['20220208_convergence_mfree_lr_0.0001_batch_size_100', 
#  '20220208_convergence_mfree_lr_0.0001_batch_size_25', 
#  '20220208_convergence_mfree_lr_0.0001_batch_size_250', 
#  '20220208_convergence_mfree_lr_0.0001_batch_size_50', 
#  '20220208_convergence_mfree_lr_0.0001_batch_size_500', 
#  '20220208_convergence_mfree_lr_0.0002_batch_size_100', 
#  '20220208_convergence_mfree_lr_0.0002_batch_size_25', 
#  '20220208_convergence_mfree_lr_0.0002_batch_size_250', 
#  '20220208_convergence_mfree_lr_0.0002_batch_size_50', 
#  '20220208_convergence_mfree_lr_0.0002_batch_size_500', 
#  '20220208_convergence_mfree_lr_0.0003_batch_size_100', 
#  '20220208_convergence_mfree_lr_0.0003_batch_size_25', 
#  '20220208_convergence_mfree_lr_0.0003_batch_size_250', 
#  '20220208_convergence_mfree_lr_0.0003_batch_size_50', 
#  '20220208_convergence_mfree_lr_0.0003_batch_size_500', 
#  '20220208_convergence_mfree_lr_0.0004_batch_size_100', 
#  '20220208_convergence_mfree_lr_0.0004_batch_size_25', 
#  '20220208_convergence_mfree_lr_0.0004_batch_size_250', 
#  '20220208_convergence_mfree_lr_0.0004_batch_size_50', 
#  '20220208_convergence_mfree_lr_0.0004_batch_size_500', 
#  '20220208_convergence_mfree_lr_0.0005_batch_size_100', 
#  '20220208_convergence_mfree_lr_0.0005_batch_size_25', 
#  '20220208_convergence_mfree_lr_0.0005_batch_size_250', 
#  '20220208_convergence_mfree_lr_0.0005_batch_size_50', 
#  '20220208_convergence_mfree_lr_0.0005_batch_size_500', 
#  '20220208_convergence_mfree_lr_0.0006_batch_size_100', 
#  '20220208_convergence_mfree_lr_0.0006_batch_size_25', 
#  '20220208_convergence_mfree_lr_0.0006_batch_size_250', 
#  '20220208_convergence_mfree_lr_0.0006_batch_size_50', 
#  '20220208_convergence_mfree_lr_0.0006_batch_size_500', 
#  '20220208_convergence_mfree_lr_0.0007_batch_size_100', 
#  '20220208_convergence_mfree_lr_0.0007_batch_size_25', 
#  '20220208_convergence_mfree_lr_0.0007_batch_size_250', 
#  '20220208_convergence_mfree_lr_0.0007_batch_size_50', 
#  '20220208_convergence_mfree_lr_0.0007_batch_size_500', 
#  '20220208_convergence_mfree_lr_0.0008_batch_size_100', 
#  '20220208_convergence_mfree_lr_0.0008_batch_size_25', 
#  '20220208_convergence_mfree_lr_0.0008_batch_size_250', 
#  '20220208_convergence_mfree_lr_0.0008_batch_size_50', 
#  '20220208_convergence_mfree_lr_0.0008_batch_size_500', 
#  '20220208_convergence_mfree_lr_0.0009_batch_size_100', 
#  '20220208_convergence_mfree_lr_0.0009_batch_size_25', 
#  '20220208_convergence_mfree_lr_0.0009_batch_size_250', 
#  '20220208_convergence_mfree_lr_0.0009_batch_size_50', 
#  '20220208_convergence_mfree_lr_0.0009_batch_size_500']



# ['20220127_convergence_mfree'] 


# ['20220119_convergence_mfree4_hidden_units_value_{}_lr_0.0001', 
#  '20220119_convergence_mfree4_hidden_units_value_{}_lr_0.00025', 
#  '20220119_convergence_mfree4_hidden_units_value_{}_lr_0.0005']
 
 
# ['20220119_convergence_mfree4_hidden_units_value_200_200_lr_0.0001', 
#  '20220119_convergence_mfree4_hidden_units_value_200_200_lr_0.00025', 
#  '20220119_convergence_mfree4_hidden_units_value_200_200_lr_0.0005', 
#  '20220119_convergence_mfree4_hidden_units_value_20_10_lr_0.0001', 
#  '20220119_convergence_mfree4_hidden_units_value_20_10_lr_0.00025', 
#  '20220119_convergence_mfree4_hidden_units_value_20_10_lr_0.0005', 
#  '20220119_convergence_mfree4_hidden_units_value_20_20_lr_0.0001', 
#  '20220119_convergence_mfree4_hidden_units_value_20_20_lr_0.00025', 
#  '20220119_convergence_mfree4_hidden_units_value_20_20_lr_0.0005', 
#  '20220119_convergence_mfree4_hidden_units_value_8_8_lr_0.0001', 
#  '20220119_convergence_mfree4_hidden_units_value_8_8_lr_0.00025', 
#  '20220119_convergence_mfree4_hidden_units_value_8_8_lr_0.0005']



# ['20220119_convergence_mfree3_clip_param_0.1_batch_size_250', 
#  '20220119_convergence_mfree3_clip_param_0.1_batch_size_500', 
#  '20220119_convergence_mfree3_clip_param_0.2_batch_size_250', 
#  '20220119_convergence_mfree3_clip_param_0.2_batch_size_500', 
#  '20220119_convergence_mfree3_clip_param_0.3_batch_size_250', 
#  '20220119_convergence_mfree3_clip_param_0.3_batch_size_500', ]
 
 
# ['20220112_convergence_res_len_series_1200_halflife_240'] 

