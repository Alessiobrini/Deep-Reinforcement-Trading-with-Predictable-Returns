# The receipt is: - choose the parameters you want for the experiment - eventually choose the
# varying parameter - choose outputModel name to recognize different experiments
##########################################################################################################
# Flags for operate different tests
algo : 'Q' # Q-Ritter: experiment from Ritter(2017), Qlin
##########################################################################################################
# Parameters for the QLearning implementation of Ritter
epsilon : 0.1  # greedy policy choice
alpha : 0.001 # discounting factor for the Q updating error (learning rate)
gamma : 0.999 # discounting factor for the Q target (sort of interest rate)
kappa : 0.0001 # risk aversion
##########################################################################################################
# Parameters for simulations
NumFactors: 1 # number of factors explaining returns
HalfLife : 5 #[5,206,500] # half-life of mean reversion to compute speed of mean reversion for the 3 factors
f_init : 0 #[0,0,0] # initial values for simulating factors
f_param : 0.01 #[0.01, 0.0231, -0.04250] # regression parameters for factors [10.32,122.34,-205.59]
sigma  : 0.01 # return volatility
sigmaf : 0.4 # factors volatility
CostMultiplier: [0.01, 0.005, 0.001, 0.0005, 0.0001, 0.00005, 0.00001, 0.000005, 0.000001]
 #0.01 # Cost multiplier to make the cost proportional to the risk as in Gar Ped (2013)
                          # It is chosen as the median across the estimate of CM for each asset
DiscountRate: 0.02 # discount rate as in the paper
##########################################################################################################
# Parameters for the state space
R_min  : 500 # boundaries for returns
R_max  : 500
LotSize  : 100 # minimum size of tradable (equities/contracts)
K  : 500  # actions that each trade can take: from -K to +K lot sizes
M  : 1000 # holdings that the agent can have: from -M to +M lot sizes
# !!!Change ticksize if you put more factors or you add noise!!!
TickSize  : 0.0001 # minimum return movement of a trading instrument
##########################################################################################################
# Parameters for launching simulations
Seed: 42 # Seed for experiment reproducibility
N_train : 1000000 #[100000, 500000, 1000000] # training steps (each step consists of one action-value update)
plot_inputs : 0 # boolean for plotting generated ret and factors
plot_insample: 0 # boolean for plotting intememdiate runtime results
add_noise: 1 # boolean for adding noise in returns simulation
trainable: 0 # boolean to decide if update QTable during iteration 
##########################################################################################################
# Parameter for storing results
outputDir: 'outputs'
outputClass: 'GPRet_K_500_M_1000_Lot_100'
outputModel: 'one_factor' # choose model name as number of factors + varying parameter
varying_par : 'CostMultiplier'  # choose a parameter to vary while performing several different experiment
              # leave blank if you don't want to vary any parameter (no subfolder will be created) 
plot_GP: 0
save_table: 0
save_results: 1
##########################################################################################################

